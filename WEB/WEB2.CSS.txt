의문점 1. style 태그는 head에 위치해야 하는 걸까??

<style></style>: html에게 css언어로 읽어달라고 하는 태그
->웹페이지에 있는 모든 a태그에 대해서 하고 싶으면 a를 쓰면 됨.
  <style>
    a {
      color:red;
    }
  </style>
-> a 부분을 선택자라고 부름. color:red부분은 데컬러레이션(선언) 효과라고 부름.
-> color 부분은 프러퍼티, 속성. red 부분은 벨류, 값

<li><a href="1.병아리.html" style="color:red">병아리</a></li>
-> 직접 태그에 쓰면 선택자를 쓸 필요가 없다.

text-decoration: none; : 밑줄을 없앰
text-decoration: underline; : 밑줄을 그음
->효과를 지정한 뒤 구분하기 위해 세미콜론;을 씀.

Property들을 검색해서 사용할 수 있음!
굳이 암기할 필요가 없고 구글링을 통해서 그때 그때 써먹으면 된다.

font-size: 폰트 사이즈
text-align: 텍스트 정렬

선택자의 종류(우선순위 크기): 태그 선택자<클래스 선택자<id선택자(단 1개) 등등
html에서 class를 지정한 값을 css로 적용하기 위해선
.을 붙여서 .~~ {}하면 된다.
class="~~ active"로 적고 띄어쓰기로 구분.
.active{} 를 입력하면 해당 클래스 active라고 적힌 부분만 변경된다.
->코드는 밑에 쓴 코드가 더 강력한 힘을 가짐. 우선순위가 높아짐.
따라서 class 대신 id="~~"로 쓴 뒤
.대신 #을 써서 #~~가 되면 더 높은 우선순위를 가짐.


  CSS BOX MODEL <box.html><box1.html> 참고
block level element : 화면 전체를 쓰는 태그
inline element : 자기 자신만큼 쓰는 태그
/*
*/ : 주석을 달때 쓰임. 메모
border은 윤곽선 테두리라는 뜻.
solid는 단선
display:inline or display:block 을 쓰게 되면 강제로 태그의 박스를 바꿀 수 있음.
display:none : 화면에서 숨길 수 있음.
margin은 테두리와 테두리 사이의 간격
padding은 안쪽 여백을 뜻함
width는 폭
height는 높이
다시 2.토끼 html로 박스모델을 조정하는 과정을 살펴보자
border-bottom:1px solid gray; 입력 후 해당 페이지 우클릭 검사. h1 클릭해보니 margin이 크다! margin:0; 입력해보고 다시 찾아보니 너무 달라붙어있다. padding:20px; 굿
ㅡ>이렇게 조정해 나가는 것임.
오른쪽 줄을 그으려면
ol{
  border-right:1px solid gray;
}
입력하면 되는데 문제가 생김. 그래서 width:100px; 입력하고 검사해보면 margin값이 있다는 것을 알 수 있음. margin:0; 리스트가 너무 붙어있네? padding:20px; 검사해보니 body 태그에 margin이 있음. body{margin:0;}


  GRID <grid.html> 참고
<div></div> 태그: 아무런 의미가 없고, 디자인의 용도로만 쓰임. block level element
<span></span> 태그: div 태그와 동일하지만, inline element
display:grid;를 입력하면 grid-~~태그를 활용할 수 있음.
columns: 열
1fr 2fr;이면 화면 전체를 3등분하여 1:2 비율로 공간을 이용.
150px 1fr; 이면 앞에서 150px 쓰고 나머지 공간을 뒤에서 다씀.
fr을 쓰게되면 이점이 내용이 길어져도 자동으로 공간을 잡아줌.
caniuse 사이트는 개발에 있어서 현재에 어떠한 기능을 이용할 수 있고 얼마나 많은 사람들이 쓰고 있는지를 알 수 있는 사이트
<2.토끼.html>로 적용.
#grid ol{}은 상위집합이 grid인 ol태그를 지정하여 명령할 수 있음.


  반응형 디자인-미디어 쿼리 <mediaquery.html>참고
ex: 창의 크기를 조절하였을 때 웹페이지가 다르게 보여줄 수 있는 기능.
div태그를 800px보다 작을때 안 보이게 하고 싶다면?화면의 크기를 알아야함
웹페이지 우클릭 검사 후 창크기 조절하면 px확인 가능
@media(min-width:800px){
  div{
    display:none;  ㅡ>화면의 크기가 최소한 800px보다 크다면 div태그를 작동
  }
}
<3.토끼.html> 참고

  CSS코드를 모든 웹페이지에 적용하려면 <style.css, 4.토끼.html>참고
  <link rel="stylesheet" hred="style.css">
link태그를 통해서 style.css와 링크되어 있음
html웹페이지 마다 style태그가 존재한다면 수많은 html웹페이지를 하나하나 검토해야하지만, link태그를 통해서 별도의 css파일을 적용하고 있다면 css파일 하나만 수정하는 것으로 수많은 html웹페이지를 일괄적으로 수정할 수 있게 됨.
캐싱: 저장하다, style태그를 html파일 내에 있는 것과 별도의css파일을 두는 것 중에서 네트워킹적으로 비교해보면 전자가 더 효율적이지만, 캐싱이라는 것 때문에 후자가 훨씬 효율적이게 된다. css파일을 다운 받은 뒤 같은 웹페이지를 열때 다운 받은 것을 활용하기에 더 효율적임.(사업자들은 더 사용료를 적게 쓸 수 있음)

코딩에 있어서 중요한 것은 중복을 제거하는 것.
중복되는 코드가 존재하지 않도록 해보는게 중요.

css를 사용하는 이유는 html에서 보다 더 효율적으로 작업할 수 있기 때문.

선택자와 속성
속성을 많이 알수록 풍부한 표현
선택자를 많이 알수록 더 정확하게 표현이 가능
CSS를 지탱하는 2개의 뿌리: 선택자와 속성
